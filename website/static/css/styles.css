html, body {
    overflow-x: hidden;
    height: 100%;
}

body {
    background: #fff;
    padding: 0;
    margin: 0;
    font-family: sans-serif;
}

.header {
    display: block;
    margin: 0 auto;
    width: 100%;
    max-width: 100%;
    box-shadow: none;
    background-color: #FC466B;
    position: fixed;
    height: 60px!important;
    overflow: hidden;
    z-index: 10;
    text-align: center;
}

.header span{
    font-weight: bold;
    color: #fff;
    line-height: 60px;
}


/* D3 SVG Definitions*/
.svg-container {
    float: left;
    width: 5px;
    height: 5px;
}

.main {
    margin: 0 auto;
    display: block;
    height: 100%;
    margin-top: 60px;
}
.mainInner{
    display: table;
    height: 100%;
    width: 100%;
    text-align: center;
}
.mainInner div{
    display:table-cell;
    vertical-align: middle;
    font-size: 3em;
    font-weight: bold;
    letter-spacing: 1.25px;
}

/* Left sidebar menu */

#leftSidebarMenu {
    height: 100%;
    position: fixed;
    left: 0;
    width: 250px;
    margin-top: 60px;
    transform: translateX(-250px);
    transition: transform 250ms ease-in-out;
    /* background: linear-gradient(180deg, #FC466B 0%, #3F5EFB 100%); */
    background: #FC466B;
}
.leftSidebarMenuInner{
    margin:0;
    padding:0;
    border-top: 1px solid rgba(255, 255, 255, 0.10);
}
.leftSidebarMenuInner_li{
    list-style: none;
    color: #fff;
    text-transform: uppercase;
    font-weight: bold;
    padding: 20px;
    cursor: pointer;
    border-bottom: 1px solid rgba(255, 255, 255, 0.10);
}

.leftSidebarMenuInner_sub_li{
    list-style: none;
    color: #fff;
    text-transform: uppercase;
    font-weight: bold;
    padding: 10px;
    cursor: pointer;
    border-bottom: 1px solid rgba(255, 255, 255, 0.10);
}

.leftSidebarMenuInner li span{
    display: block;
    font-size: 14px;
    color: rgba(255, 255, 255, 0.50);
}
.leftSidebarMenuInner li a{
    color: #fff;
    text-transform: uppercase;
    font-weight: bold;
    cursor: pointer;
    text-decoration: none;
}
input[class="openLeftSidebarMenu"]:checked ~ #leftSidebarMenu {
    transform: translateX(0);
}

input[class="openLeftSidebarMenu"] {
    transition: all 0.3s;
    box-sizing: border-box;
    display: none;
}
.leftSidebarIconToggle {
    transition: all 0.3s;
    box-sizing: border-box;
    cursor: pointer;
    position: absolute;
    z-index: 99;
    height: 100%;
    width: 100%;
    top: 22px;
    left: 15px;
    height: 22px;
    width: 22px;
}
.spinner {
    transition: all 0.3s;
    box-sizing: border-box;
    position: absolute;
    height: 3px;
    width: 100%;
    background-color: #fff;
}
.horizontal {
    transition: all 0.3s;
    box-sizing: border-box;
    position: relative;
    float: left;
    margin-top: 3px;
}
.diagonal.part-1 {
    position: relative;
    transition: all 0.3s;
    box-sizing: border-box;
    float: left;
}
.diagonal.part-2 {
    transition: all 0.3s;
    box-sizing: border-box;
    position: relative;
    float: left;
    margin-top: 3px;
}
input[class="openLeftSidebarMenu"]:checked ~ .leftSidebarIconToggle > .horizontal {
    transition: all 0.3s;
    box-sizing: border-box;
    opacity: 0;
}
input[class="openLeftSidebarMenu"]:checked ~ .leftSidebarIconToggle > .diagonal.part-1 {
    transition: all 0.3s;
    box-sizing: border-box;
    transform: rotate(135deg);
    margin-top: 8px;
}
input[class="openLeftSidebarMenu"]:checked ~ .leftSidebarIconToggle > .diagonal.part-2 {
    transition: all 0.3s;
    box-sizing: border-box;
    transform: rotate(-135deg);
    margin-top: -9px;
}

/* Right sidebar menu 
The code below is similar to that one above, but I am keeping both copies as we may change them in different ways - going to combine into one later
*/

#rightSidebarMenu {
    height: 100%;
    position: fixed;
    right: 0;
    width: 350px;
    margin-top: 60px;
    transform: translateX(350px);
    transition: transform 250ms ease-in-out;
    /* background: linear-gradient(180deg, #FC466B 0%, #3F5EFB 100%); */
    background: #FC466B;
}
.rightSidebarMenuInner{
    margin:0;
    padding:0;
    border-top: 1px solid rgba(255, 255, 255, 0.10);
}
.rightSidebarMenuInner li{
    list-style: none;
    color: #fff;
    text-transform: uppercase;
    font-weight: bold;
    padding: 20px;
    cursor: pointer;
    border-bottom: 1px solid rgba(255, 255, 255, 0.10);
}
.rightSidebarMenuInner li span{
    display: block;
    font-size: 14px;
    color: rgba(255, 255, 255, 0.50);
}
.rightSidebarMenuInner li a{
    color: #fff;
    text-transform: uppercase;
    font-weight: bold;
    cursor: pointer;
    text-decoration: none;
}
input[class="openRightSidebarMenu"]:checked ~ #rightSidebarMenu {
    transform: translateX(0);
}

input[class="openRightSidebarMenu"] {
    transition: all 0.3s;
    box-sizing: border-box;
    display: none;
}
.rightSidebarIconToggle {
    transition: all 0.3s;
    box-sizing: border-box;
    cursor: pointer;
    position: absolute;
    z-index: 99;
    height: 100%;
    width: 100%;
    top: 15px;
    right: 15px;
    height: 30px;
    width: 30px;
}
.i-circle {
    display: inline-block;
    color: #fff;
    border-radius: 50%;
    font-size: 17px;
    line-height: 22px; /* set to same size as width, height */
    width: 22px;
    height: 22px;
    text-align: center;
    border-width: 3px;
    border-color:#fff;
    border-style: solid;
    font-weight: bold;
}

/* Search input style */

input[type=text] {
    appearance: none;
    border: none;
    outline: none;
    border-bottom: .2em solid #E91E63;
    background: rgba(#E91E63, .2);
    border-radius: 1em 1em 1em 1em;
    padding: .4em;
    color: #E91E63;
  }

/* Checked box style */
/* Customize the label (the container) */
.container {
    display: block;
    position: relative;
    padding-left: 35px;
    /* margin-bottom: 12px; */
    cursor: pointer;
    font-size: 22px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }
  
/* Hide the browser's default checkbox */
  .container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }
  
  /* Create a custom checkbox */
  .checkmark {
    position: absolute;
    top: 0;
    right: 0;
    height: 25px;
    width: 25px;
    background-color: #eee;
  }
  
  /* On mouse-over, add a grey background color */
  .container:hover input ~ .checkmark {
    background-color: #ccc;
  }
  
  /* When the checkbox is checked, add a blue background */
  .container input:checked ~ .checkmark {
    background-color: #2196F3;
  }
  
  /* Create the checkmark/indicator (hidden when not checked) */
  .checkmark:after {
    content: "";
    position: absolute;
    display: none;
  }
  
  /* Show the checkmark when checked */
  .container input:checked ~ .checkmark:after {
    display: block;
  }
  
  /* Style the checkmark/indicator */
  .container .checkmark:after {
    left: 9px;
    top: 5px;
    width: 5px;
    height: 10px;
    border: solid white;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
  }